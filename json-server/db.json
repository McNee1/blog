{
  "articles": [
    {
      "title": "В начале этого года Python сместил Java и стал вторым по популярности языком программирования среди разработчиков",
      "img": "https://habrastorage.org/r/w1560/webt/ex/ho/a_/exhoa_iuj7ofm4-u4nlmhnw4oyy.png",
      "blocks": [
        {
          "type": "TEXT",
          "text": "Согласно отчету RedMonk за январь 2020 года, Python стал вторым по популярности языком программирования после Java Script, Ранее эту позицию на протяжении длительного времени уверенно удерживал Java, однако в начале года этот ЯП сместился на третью строчку рейтинга, который формируется на базе информации репозиториев GitHub, Если быть точными, то пара Java Script и Java удерживали топ-2 популярности языков программирования с момента начала формирования указанного рейтинга, то есть с 2012 года",
          "id": "1"
        },
        {
          "type": "TEXT",
          "text": [
            "Популярность JS и Java и их топовые позиции в рейтинге ожидаемы",
            " Java Script — основной язык веб-разработки уже долгие годы, когда как Java — стандарт в разработке под Android и в сфере корпоративных приложений"
          ],
          "id": "2"
        },
        {
          "type": "TEXT",
          "text": [
            "В рейтинге не совсем корректно учтены такие специфические научные языки, как Mathematica, потому что основная сфера их применения и сообщества находятся за пределами ресурсов, на базе которых составлялся рейтинг"
          ],
          "id": "3"
        },
        {
          "type": "TEXT",
          "text": [
            "Основной причиной роста Python в рейтинге исследователи называют универсальность языка",
            " Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами",
            " Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру",
            " Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми"
          ],
          "id": "4"
        },
        {
          "type": "TEXT",
          "text": [
            "Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям."
          ],
          "id": "5"
        },
        {
          "type": "TEXT",
          "text": [
            "В целом, весь рейтинг дает некоторую пищу для размышлений",
            " На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++",
            " На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить",
            " «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке"
          ],
          "id": "6"
        },
        {
          "type": "TEXT",
          "text": [
            "Особенно чувствуется падение Kotlin — второго самого быстрорастущего языка программирования в истории после Swift",
            " На старте Kotlin сразу же ворвался в топ-5 рейтинга RedMonk, однако это был просто единовременный всплеск: языку от JetBrains не удалось удержаться даже в первой десятке, и из месяца в месяц его популярность только падает",
            " В этом месяце Kotlin добавил одну строчку и переместился с 20 на 19 место, однако только время покажет, постоянен этот рост или это просто «сезонные» колебания",
            " Вполне вероятно, он зафиксируется на какой-то отметке во второй десятке, как это было со Swift"
          ],
          "id": "7"
        },
        {
          "type": "TEXT",
          "text": [
            "Весь рейтинг составлялся на базе данных GitHub Archive с перекрестной проверкой по базам Stackoverflow",
            " Эти два ресурса использовались для сбора статистики, так как являются наиболее крупными сообществами разработчиков во всем мире"
          ],
          "id": "8"
        }
      ],
      "type": [
        "SCIENCE",
        "IT"
      ],
      "userId": "4",
      "views": 0,
      "createdAt": "1721916296917",
      "id": 1,
      "subtitle": "",
      "changed": "1724941889843",
      "reaction": 1
    },
    {
      "title": "Замыкание в Java Script для непосвященных",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "type": "TEXT",
          "text": "У моих программистов была задача: в фото галерее при активном изображении подсвечивать thumbnail показываемого изображения. Задача вроде тривиальная, но вызвала у них некоторый затык при решении. Хочу сказать сразу, что владение JS было у них не на высоте.\nВообще мало людей по настоящему знающих этот язык и не путующий его с принципами работы DOM документа.",
          "id": "1"
        },
        {
          "type": "TEXT",
          "text": "В чем же была проблема…\n1. В том, что сначала они решали её рекурсией :)\n2. Вторая попытка решить привела к введению глобальной переменной, что я не считаю хорошим тоном\n3. Загрязнение общего кода подобными маленькими функциями вместо использования объектного подхода",
          "id": "2"
        },
        {
          "type": "TEXT",
          "text": "В бытности будучи программистом я написал маленький каркас для демонстрации. Вот он:",
          "id": "3"
        },
        {
          "type": "CODE",
          "code": "function MainMenu(){\r\n            \r\n            var OldImage;\r\n\r\n            this.getOldImage = function(){ return OldImage; }\r\n            this.setOldImage = function( img ){ OldImage = img;}\r\n            this.chgImage = function( obj, newImage){\r\n              if(newImage != null){\r\n                this.setOldImage(obj.src);\r\n                obj.src = '/images/'+newImage;\r\n              } else {\r\n                obj.src = this.getOldImage();\r\n              }\r\n            }\r\n\r\n}\r\n\r\nvar Menu = new MainMenu();",
          "id": "4"
        },
        {
          "type": "TEXT",
          "text": "Вызывать следует так:",
          "id": "5"
        },
        {
          "type": "CODE",
          "code": "<img src=\"/images/home.gif\" width=«88» height=«23» alt=\"\" onmouseover=«Menu.chgImage(this, 'home_over.gif')» onmouseout=«Menu.chgImage(this)»>* This source code was highlighted with Source Code Highlighter.",
          "id": "6"
        },
        {
          "type": "TEXT",
          "text": "Что это нам дало:\n\n1. Мы не используем рекурсию. Этим мы бережем ресурсы компьютера. У клиентских машин они же не резиновые вопреки обратным утверждениям\n2. Мы не ввели глобальную переменную, которая в больших системах неудобна по объективням причинам\n3. В третьих мы сделали универсальный объект. У него инкапсулированы данные!",
          "id": "8"
        },
        {
          "type": "TEXT",
          "text": "Новичкам просьба разобраться и понять. Этот вариант сделан специально проще, чем мы реализовывали.",
          "id": "9"
        },
        {
          "type": "TEXT",
          "text": "Мы создаем в теле функции локальную переменную. Затем захватываем эту переменную методом этой функции (это класс, точнее прототип). В итоге получаем хитрый трюк. При выходе из самой функции данные в ней запомнились.",
          "id": "10"
        },
        {
          "type": "TEXT",
          "text": "Вообще-то по этому вопросу материала достаточно в сети. Этот трюк далеко не новый. Но о нем нужно напоминать «отцам» и учить новичков.",
          "id": "11"
        }
      ],
      "userId": "1",
      "views": 0,
      "createdAt": "1722521384508",
      "id": 2,
      "changed": "1722688708791",
      "reaction": 4
    },
    {
      "title": "2Замыкание в Java Script для непосвященных",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "type": "TEXT",
          "text": "У моих программистов была задача: в фото галерее при активном изображении подсвечивать thumbnail показываемого изображения. Задача вроде тривиальная, но вызвала у них некоторый затык при решении. Хочу сказать сразу, что владение JS было у них не на высоте.\nВообще мало людей по настоящему знающих этот язык и не путующий его с принципами работы DOM документа.",
          "id": "1"
        },
        {
          "type": "TEXT",
          "text": "В чем же была проблема…\n1. В том, что сначала они решали её рекурсией :)\n2. Вторая попытка решить привела к введению глобальной переменной, что я не считаю хорошим тоном\n3. Загрязнение общего кода подобными маленькими функциями вместо использования объектного подхода",
          "id": "2"
        },
        {
          "type": "TEXT",
          "text": "В бытности будучи программистом я написал маленький каркас для демонстрации. Вот он:",
          "id": "3"
        },
        {
          "type": "CODE",
          "code": "function MainMenu(){\r\n            \r\n            var OldImage;\r\n\r\n            this.getOldImage = function(){ return OldImage; }\r\n            this.setOldImage = function( img ){ OldImage = img;}\r\n            this.chgImage = function( obj, newImage){\r\n              if(newImage != null){\r\n                this.setOldImage(obj.src);\r\n                obj.src = '/images/'+newImage;\r\n              } else {\r\n                obj.src = this.getOldImage();\r\n              }\r\n            }\r\n\r\n}\r\n\r\nvar Menu = new MainMenu();",
          "id": "4"
        },
        {
          "type": "TEXT",
          "text": "Вызывать следует так:",
          "id": "5"
        },
        {
          "type": "CODE",
          "code": "<img src=\"/images/home.gif\" width=«88» height=«23» alt=\"\" onmouseover=«Menu.chgImage(this, 'home_over.gif')» onmouseout=«Menu.chgImage(this)»>* This source code was highlighted with Source Code Highlighter.",
          "id": "6"
        },
        {
          "type": "TEXT",
          "text": "Что это нам дало:\n\n1. Мы не используем рекурсию. Этим мы бережем ресурсы компьютера. У клиентских машин они же не резиновые вопреки обратным утверждениям\n2. Мы не ввели глобальную переменную, которая в больших системах неудобна по объективням причинам\n3. В третьих мы сделали универсальный объект. У него инкапсулированы данные!",
          "id": "8"
        },
        {
          "type": "TEXT",
          "text": "Новичкам просьба разобраться и понять. Этот вариант сделан специально проще, чем мы реализовывали.",
          "id": "9"
        },
        {
          "type": "TEXT",
          "text": "Мы создаем в теле функции локальную переменную. Затем захватываем эту переменную методом этой функции (это класс, точнее прототип). В итоге получаем хитрый трюк. При выходе из самой функции данные в ней запомнились.",
          "id": "10"
        },
        {
          "type": "TEXT",
          "text": "Вообще-то по этому вопросу материала достаточно в сети. Этот трюк далеко не новый. Но о нем нужно напоминать «отцам» и учить новичков.",
          "id": "11"
        }
      ],
      "userId": "3",
      "views": 0,
      "createdAt": "1722521384508",
      "id": 4,
      "changed": "1727861727160"
    },
    {
      "title": "2343Замыкание в Java Script для непосвященных",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "type": "TEXT",
          "text": "У моих программистов была задача: в фото галерее при активном изображении подсвечивать thumbnail показываемого изображения. Задача вроде тривиальная, но вызвала у них некоторый затык при решении. Хочу сказать сразу, что владение JS было у них не на высоте.\nВообще мало людей по настоящему знающих этот язык и не путующий его с принципами работы DOM документа.",
          "id": "1"
        },
        {
          "type": "TEXT",
          "text": "В чем же была проблема…\n1. В том, что сначала они решали её рекурсией :)\n2. Вторая попытка решить привела к введению глобальной переменной, что я не считаю хорошим тоном\n3. Загрязнение общего кода подобными маленькими функциями вместо использования объектного подхода",
          "id": "2"
        },
        {
          "type": "TEXT",
          "text": "В бытности будучи программистом я написал маленький каркас для демонстрации. Вот он:",
          "id": "3"
        },
        {
          "type": "CODE",
          "code": "function MainMenu(){\r\n            \r\n            var OldImage;\r\n\r\n            this.getOldImage = function(){ return OldImage; }\r\n            this.setOldImage = function( img ){ OldImage = img;}\r\n            this.chgImage = function( obj, newImage){\r\n              if(newImage != null){\r\n                this.setOldImage(obj.src);\r\n                obj.src = '/images/'+newImage;\r\n              } else {\r\n                obj.src = this.getOldImage();\r\n              }\r\n            }\r\n\r\n}\r\n\r\nvar Menu = new MainMenu();",
          "id": "4"
        },
        {
          "type": "TEXT",
          "text": "Вызывать следует так:",
          "id": "5"
        },
        {
          "type": "CODE",
          "code": "<img src=\"/images/home.gif\" width=«88» height=«23» alt=\"\" onmouseover=«Menu.chgImage(this, 'home_over.gif')» onmouseout=«Menu.chgImage(this)»>* This source code was highlighted with Source Code Highlighter.",
          "id": "6"
        },
        {
          "type": "TEXT",
          "text": "Что это нам дало:\n\n1. Мы не используем рекурсию. Этим мы бережем ресурсы компьютера. У клиентских машин они же не резиновые вопреки обратным утверждениям\n2. Мы не ввели глобальную переменную, которая в больших системах неудобна по объективням причинам\n3. В третьих мы сделали универсальный объект. У него инкапсулированы данные!",
          "id": "8"
        },
        {
          "type": "TEXT",
          "text": "Новичкам просьба разобраться и понять. Этот вариант сделан специально проще, чем мы реализовывали.",
          "id": "9"
        },
        {
          "type": "TEXT",
          "text": "Мы создаем в теле функции локальную переменную. Затем захватываем эту переменную методом этой функции (это класс, точнее прототип). В итоге получаем хитрый трюк. При выходе из самой функции данные в ней запомнились.",
          "id": "10"
        },
        {
          "type": "TEXT",
          "text": "Вообще-то по этому вопросу материала достаточно в сети. Этот трюк далеко не новый. Но о нем нужно напоминать «отцам» и учить новичков.",
          "id": "11"
        }
      ],
      "userId": "1",
      "views": 0,
      "createdAt": "1722521384508",
      "id": 5,
      "changed": "1722688708791",
      "reaction": 0
    }
  ],
  "comments": [
    {
      "articleId": "1",
      "date": "1722520930233",
      "text": "Отличная статья",
      "userId": "1",
      "id": 1
    },
    {
      "articleId": "2",
      "date": "1722951895488",
      "text": "hello world!",
      "userId": "2",
      "id": 2
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "Homer",
      "password": "123",
      "email": "test@t.tt",
      "role": "admin",
      "avatar": "https://images.sftcdn.net/images/t_app-cover-l,f_auto/p/e76d4296-43f3-493b-9d50-f8e5c142d06c/2117667014/boys-profile-picture-screenshot.png",
      "jsonSetting": {
        "theme": "dark",
        "foo": 111
      }
    },
    {
      "id": "2",
      "username": "Mike",
      "password": "123",
      "email": "test1@t.tt",
      "role": "moderator",
      "avatar": "https://avatars.mds.yandex.net/get-shedevrum/11425623/img_b741a033f00f11eeb7f0ba0d8cad0506/orig",
      "jsonSetting": {
        "theme": "dark",
        "foo": "22"
      }
    },
    {
      "id": "3",
      "username": "Bart",
      "password": "123",
      "role": "admin",
      "email": "test2@t.tt",
      "avatar": "https://www.shutterstock.com/image-vector/bart-simpson-cartoon-character-isolated-600nw-2413951549.jpg"
    },
    {
      "id": "4",
      "isDeleted": true
    }
  ],
  "profile": [
    {
      "id": "2",
      "firstName": "One1",
      "lastName": "Dondon",
      "age": 2,
      "currency": "RUB",
      "country": "RU",
      "city": "Moscow",
      "username": "admin",
      "avatar": "https://avatars.mds.yandex.net/get-shedevrum/11425623/img_b741a033f00f11eeb7f0ba0d8cad0506/orig",
      "email": "test@t.tt"
    },
    {
      "id": "3",
      "firstName": "Homer",
      "lastName": "Sim",
      "currency": "USD",
      "country": "AU",
      "age": 10,
      "username": "Bart",
      "password": "12324",
      "email": "tes1tt@t.tt",
      "avatar": "https://www.shutterstock.com/image-vector/bart-simpson-cartoon-character-isolated-600nw-2413951549.jpg"
    }
  ],
  "reactions": [
    {
      "articleId": "5",
      "userId": "1",
      "reaction": "like",
      "id": 2
    },
    {
      "articleId": "1",
      "userId": "1",
      "reaction": "like",
      "id": 3
    },
    {
      "articleId": "2",
      "userId": "1",
      "reaction": "like",
      "id": 4
    }
  ]
}